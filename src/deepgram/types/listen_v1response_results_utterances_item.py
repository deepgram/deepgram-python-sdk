# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .listen_v1response_results_utterances_item_words_item import ListenV1ResponseResultsUtterancesItemWordsItem


class ListenV1ResponseResultsUtterancesItem(UniversalBaseModel):
    start: typing.Optional[float] = None
    end: typing.Optional[float] = None
    confidence: typing.Optional[float] = None
    channel: typing.Optional[int] = None
    transcript: typing.Optional[str] = None
    words: typing.Optional[typing.List[ListenV1ResponseResultsUtterancesItemWordsItem]] = None
    speaker: typing.Optional[int] = None
    id: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
