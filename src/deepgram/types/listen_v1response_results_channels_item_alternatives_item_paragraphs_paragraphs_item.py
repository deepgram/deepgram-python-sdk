# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .listen_v1response_results_channels_item_alternatives_item_paragraphs_paragraphs_item_sentences_item import (
    ListenV1ResponseResultsChannelsItemAlternativesItemParagraphsParagraphsItemSentencesItem,
)


class ListenV1ResponseResultsChannelsItemAlternativesItemParagraphsParagraphsItem(UniversalBaseModel):
    sentences: typing.Optional[
        typing.List[ListenV1ResponseResultsChannelsItemAlternativesItemParagraphsParagraphsItemSentencesItem]
    ] = None
    speaker: typing.Optional[float] = None
    num_words: typing.Optional[float] = None
    start: typing.Optional[float] = None
    end: typing.Optional[float] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
