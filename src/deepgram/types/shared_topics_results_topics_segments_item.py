# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .shared_topics_results_topics_segments_item_topics_item import SharedTopicsResultsTopicsSegmentsItemTopicsItem


class SharedTopicsResultsTopicsSegmentsItem(UniversalBaseModel):
    text: typing.Optional[str] = None
    start_word: typing.Optional[int] = None
    end_word: typing.Optional[int] = None
    topics: typing.Optional[typing.List[SharedTopicsResultsTopicsSegmentsItemTopicsItem]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
