# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class ProjectRequestResponse(UniversalBaseModel):
    """
    A single request
    """

    request_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The unique identifier of the request
    """

    project_uuid: typing.Optional[str] = pydantic.Field(default=None)
    """
    The unique identifier of the project
    """

    created: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    The date and time the request was created
    """

    path: typing.Optional[str] = pydantic.Field(default=None)
    """
    The API path of the request
    """

    api_key_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The unique identifier of the API key
    """

    response: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field(default=None)
    """
    The response of the request
    """

    code: typing.Optional[float] = pydantic.Field(default=None)
    """
    The response code of the request
    """

    deployment: typing.Optional[str] = pydantic.Field(default=None)
    """
    The deployment type
    """

    callback: typing.Optional[str] = pydantic.Field(default=None)
    """
    The callback URL for the request
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
