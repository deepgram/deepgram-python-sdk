# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class UsageBreakdownV1ResponseResultsItemGrouping(UniversalBaseModel):
    start: typing.Optional[str] = pydantic.Field(default=None)
    """
    Start date for this group
    """

    end: typing.Optional[str] = pydantic.Field(default=None)
    """
    End date for this group
    """

    accessor: typing.Optional[str] = pydantic.Field(default=None)
    """
    Optional accessor identifier
    """

    endpoint: typing.Optional[str] = pydantic.Field(default=None)
    """
    Optional endpoint identifier
    """

    feature_set: typing.Optional[str] = pydantic.Field(default=None)
    """
    Optional feature set identifier
    """

    models: typing.Optional[str] = pydantic.Field(default=None)
    """
    Optional models identifier
    """

    method: typing.Optional[str] = pydantic.Field(default=None)
    """
    Optional method identifier
    """

    tags: typing.Optional[str] = pydantic.Field(default=None)
    """
    Optional tags
    """

    deployment: typing.Optional[str] = pydantic.Field(default=None)
    """
    Optional deployment identifier
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
