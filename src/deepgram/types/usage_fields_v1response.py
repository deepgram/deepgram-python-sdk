# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .usage_fields_v1response_models_item import UsageFieldsV1ResponseModelsItem


class UsageFieldsV1Response(UniversalBaseModel):
    tags: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    List of tags associated with the project
    """

    models: typing.Optional[typing.List[UsageFieldsV1ResponseModelsItem]] = pydantic.Field(default=None)
    """
    List of models available for the project.
    """

    processing_methods: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Processing methods supported by the API
    """

    features: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    API features available to the project
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
