# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class BillingBreakdownV1ResponseResultsItemGrouping(UniversalBaseModel):
    start: typing.Optional[str] = pydantic.Field(default=None)
    """
    Start date for this group
    """

    end: typing.Optional[str] = pydantic.Field(default=None)
    """
    End date for this group
    """

    accessor: typing.Optional[str] = pydantic.Field(default=None)
    """
    Optional accessor identifier, null unless grouped by accessor.
    """

    deployment: typing.Optional[str] = pydantic.Field(default=None)
    """
    Optional deployment identifier, null unless grouped by deployment.
    """

    line_item: typing.Optional[str] = pydantic.Field(default=None)
    """
    Optional line item identifier, null unless grouped by line item.
    """

    tags: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Optional list of tags, null unless grouped by tags.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
