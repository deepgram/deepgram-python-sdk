# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .agent_v1update_speak_speak_provider_open_ai_model import AgentV1UpdateSpeakSpeakProviderOpenAiModel
from .agent_v1update_speak_speak_provider_open_ai_voice import AgentV1UpdateSpeakSpeakProviderOpenAiVoice


class AgentV1UpdateSpeakSpeakProviderOpenAi(UniversalBaseModel):
    model: AgentV1UpdateSpeakSpeakProviderOpenAiModel = pydantic.Field()
    """
    OpenAI TTS model
    """

    voice: AgentV1UpdateSpeakSpeakProviderOpenAiVoice = pydantic.Field()
    """
    OpenAI voice
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
