# This file was auto-generated by Fern from our API Definition.

from typing import List, Optional

from ....core.pydantic_utilities import UniversalBaseModel


class ListenV2TurnInfoEventWordsItem(UniversalBaseModel):
    word: str
    confidence: float

    def json(self, **kwargs) -> str:
        kwargs_with_defaults = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs) -> dict:
        kwargs_with_defaults = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        extra = "forbid"


class ListenV2TurnInfoEvent(UniversalBaseModel):
    type: str
    request_id: str
    sequence_id: int
    event: str
    turn_index: int
    audio_window_start: float
    audio_window_end: float
    transcript: str
    words: List[ListenV2TurnInfoEventWordsItem]
    end_of_turn_confidence: float

    def json(self, **kwargs) -> str:
        kwargs_with_defaults = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs) -> dict:
        kwargs_with_defaults = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        extra = "forbid"
